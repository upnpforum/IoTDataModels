#%RAML 0.8
title: OICTemperature
version: v1.0-20150727
schemas:
  - Temperature:      !include oic.r.temperature.json
    TemperatureError: !include oic.r.temperature-Error.json

traits:
  - interface:
      queryParameters:
        if:
          enum: ["oic.if.a", "oic.if.s"]

/TemperatureResURI:
  description: |
    This resource describes a sensed or actuated Temperature value.
    The temperature describes the current value measured.
    If the units attribute is missing the default is Celsius [C].
    The range is a comma separated min,max values for this temperature on this device.
    If no range is provided the default is +/- MAXINT.

  displayName: Temperature
  is: [ interface ] # valid for all methods

  get:
    description: |
      Retrieves the current temperature value.
      A client can specify the units for the requested temperature by use of a query parameter.
    queryParameters:
      units:
        displayName: Units
        enum: ["C","F","K"]
    responses:
      200:
        body:
          application/json:
            schema: Temperature
            example: |
              {
                "rt":           "oic.r.temperature",
                "id":           "unique_example_id",
                "temperature":  20.0,
                "units":        "C",
                "range":        "0,100"
              }

      403:
        description: |
          This response is generated by the OIC Server when the client sends:
            A retrieve with q queryParameter indicating a unit that the server does not support.
          The server responds with the units enumeration illustrating the error.
        body:
          application/json:
            schema: TemperatureError
            example: |
              {
                "id":     "unique_example_id",
                "units":  "C"
              }

  post:
    description: |
      Sets the desired temperature value.
      If the units are omitted the current value for units known by the server is used.
    body:
      application/json:
        schema: Temperature
        example: |
          {
            "id":           "unique_example_id",
            "temperature":  18
          }
    responses:
      200:
         body:
          application/json:
            schema: Temperature
            example: |
              {
                "id":          "unique_example_id",
                "temperature": 18
              }

      403:
        description: |
          This response is generated by the OIC Server when the client sends:
            An update with an out of range property value for temperature.
          The server responds with the range property illustrating the error.
        body:
          application/json:
            schema: TemperatureError
            example: |
              {
                "id":     "unique_example_id",
                "range":  "0,100"
              }
